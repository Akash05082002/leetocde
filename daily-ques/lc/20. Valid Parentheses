*/
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 
Example 1:
Input: s = "()"
Output: true

Example 2:
Input: s = "()[]{}"
Output: true
*/


class Solution {
    public boolean isValid(String s) {
        Map<Character, Character> hm = Map.of(')','(','}','{',']','[');
        Stack<Character> st=new Stack<>();
        
        for(char ch:s.toCharArray())
        {
            
            if(hm.containsKey(ch))
            {
                if(st.isEmpty() || st.pop()!=hm.get(ch))
                    return false;
            }
            else
                st.push(ch);
        }
        return true;
        
    }
}
